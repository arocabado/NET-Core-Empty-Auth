// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Data;

#nullable disable

namespace geoportal_back.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240325225617_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecGrupoRiMenu", b =>
                {
                    b.Property<Guid>("GruposId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenusId")
                        .HasColumnType("uuid");

                    b.HasKey("GruposId", "MenusId");

                    b.HasIndex("MenusId");

                    b.ToTable("RecGrupoRiMenu");
                });

            modelBuilder.Entity("RecGrupoUsuario", b =>
                {
                    b.Property<Guid>("GruposId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uuid");

                    b.HasKey("GruposId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("RecGrupoUsuario");
                });

            modelBuilder.Entity("server.Models.Proyecto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("AuthVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("IdUsrCreacion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrModificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("server.Models.RecGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdProyecto")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrCreacion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrModificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdProyecto");

                    b.ToTable("RecGrupo");
                });

            modelBuilder.Entity("server.Models.RiAccesoModelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Crear")
                        .HasColumnType("boolean");

                    b.Property<bool>("Editar")
                        .HasColumnType("boolean");

                    b.Property<bool>("Eliminar")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdGrupo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdModelo")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrCreacion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrModificacion")
                        .HasColumnType("uuid");

                    b.Property<bool>("Ver")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModelo");

                    b.ToTable("RiAccesoModelo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Accion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("IdPadre")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrCreacion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrModificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathIcono")
                        .HasColumnType("text");

                    b.Property<string>("PathPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProyectoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdPadre");

                    b.HasIndex("ProyectoId");

                    b.ToTable("RiMenu");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdMenu")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdProyecto")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrCreacion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrModificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("NombreModelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProyectoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdMenu");

                    b.HasIndex("ProyectoId");

                    b.ToTable("RiModelo");
                });

            modelBuilder.Entity("server.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("CodigoSecreto")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Firma")
                        .HasColumnType("text");

                    b.Property<Guid>("IdProyecto")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrCreacion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsrModificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notificacion")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<bool?>("Verificado")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdProyecto");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("RecGrupoRiMenu", b =>
                {
                    b.HasOne("server.Models.RecGrupo", null)
                        .WithMany()
                        .HasForeignKey("GruposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RiMenu", null)
                        .WithMany()
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecGrupoUsuario", b =>
                {
                    b.HasOne("server.Models.RecGrupo", null)
                        .WithMany()
                        .HasForeignKey("GruposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("server.Models.RecGrupo", b =>
                {
                    b.HasOne("server.Models.Proyecto", "Proyecto")
                        .WithMany("RecGrupos")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("server.Models.RiAccesoModelo", b =>
                {
                    b.HasOne("server.Models.RecGrupo", "Grupo")
                        .WithMany("Accesos")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RiModelo", "Modelo")
                        .WithMany("Accesos")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.HasOne("server.Models.RiMenu", "Padre")
                        .WithMany()
                        .HasForeignKey("IdPadre");

                    b.HasOne("server.Models.Proyecto", "Proyecto")
                        .WithMany("RiMenus")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Padre");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.HasOne("server.Models.RiMenu", "Menu")
                        .WithMany("Modelos")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Proyecto", null)
                        .WithMany("RiModelos")
                        .HasForeignKey("ProyectoId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("server.Models.Usuario", b =>
                {
                    b.HasOne("server.Models.Proyecto", "Proyecto")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("server.Models.Proyecto", b =>
                {
                    b.Navigation("RecGrupos");

                    b.Navigation("RiMenus");

                    b.Navigation("RiModelos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("server.Models.RecGrupo", b =>
                {
                    b.Navigation("Accesos");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.Navigation("Accesos");
                });
#pragma warning restore 612, 618
        }
    }
}
